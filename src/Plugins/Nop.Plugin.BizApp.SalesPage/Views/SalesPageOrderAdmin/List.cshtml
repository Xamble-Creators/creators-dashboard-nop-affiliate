@model OrderSearchModel

@inject IStoreService storeService
@using Nop.Services.Stores

@{
    //page title
    ViewBag.PageTitle = T("Admin.Orders").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("BizApp Orders");
}

@{
    const string hideSearchBlockAttributeName = "OrdersPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<form asp-controller="Order" asp-action="List" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Orders")
        </h1>
        <div class="float-right">
            <button asp-action="ExportExcel" type="submit" name="exportexcel-all" class="btn btn-success">
                <i class="far fa-file-excel"></i>
                @T("Admin.Common.Export")
            </button>
        </div>
    </div>
    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="StartDate" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="StartDate" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="EndDate" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="EndDate" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="PaymentStatusIds" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="PaymentStatusIds" asp-items="Model.AvailablePaymentStatuses" asp-multiple="true" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="CustomOrderNumber" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="CustomOrderNumber" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="Phone" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="Phone" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="Email" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="Email" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="CustomerName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="CustomerName" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-orders" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">

                            @{
                                var gridModel = new DataTablesModel
            {
                Name = "orders-grid",
                UrlRead = new DataUrl("OrderList", "SalesPageOrderAdmin", null),
                SearchButtonId = "search-orders",
                Length = Model.PageSize,
                LengthMenu = Model.AvailablePageSizes,
                Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.StartDate), typeof(DateTime?)),
                            new FilterParameter(nameof(Model.EndDate), typeof(DateTime?)),
                            new FilterParameter(nameof(Model.PaymentStatusIds)),
                            new FilterParameter(nameof(Model.Email)),
                            new FilterParameter(nameof(Model.Phone)),
                            new FilterParameter(nameof(Model.CustomerName)),
                            new FilterParameter(nameof(Model.CustomOrderNumber))
                            }
            };
                                gridModel.ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(OrderModel.CustomOrderNumber))
                            {
                            Title = T("Admin.Orders.Fields.CustomOrderNumber").Text,
                            Width = "80"
                            }
                            };
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.PaymentStatus))
            {
                Title = T("Admin.Orders.Fields.PaymentStatus").Text,
                Width = "150"
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.CustomerFullName))
            {
                Title = T("Admin.Orders.Fields.Customer").Text,
                Width = "250"
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.CustomerEmail))
            {
                Title = T("Admin.Orders.Fields.CustomerEmail").Text,
                Width = "200"
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.CustomerPhone))
            {
                Title = T("Admin.Address.Fields.PhoneNumber").Text,
                Width = "150"
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.CreatedOn))
            {
                Title = T("Admin.Orders.Fields.CreatedOn").Text,
                Width = "120",
                Render = new RenderDate()
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(OrderModel.OrderTotal))
            {
                Title = T("Admin.Orders.Fields.OrderTotal").Text,
                Width = "100",
            });
                            }

                            @await Html.PartialAsync("Table", gridModel)

                            <script>
                                function renderColumnOrderStatus(data, type, row, meta) {
                                    var color;
                                    switch (row.OrderStatusId) {
                                        case 10:
                                            color = 'yellow';
                                            break;
                                        case 20:
                                            color = 'blue';
                                            break;
                                        case 30:
                                            color = 'green';
                                            break;
                                        case 40:
                                            color = 'red';
                                            break;
                                    }
                                    return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                                }
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
