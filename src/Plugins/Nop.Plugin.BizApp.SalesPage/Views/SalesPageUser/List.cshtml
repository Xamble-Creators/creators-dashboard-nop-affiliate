@model CustomerSearchModel

@using Nop.Core.Domain.Media

@inject MediaSettings _mediaSettings

@{
    //page title
    ViewBag.PageTitle = T("Plugins.BizApp.SalesPage.Users").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("BizApp Users");
}

@{
    const string hideSearchBlockAttributeName = "BizAppUserListPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<form asp-controller="SalesPageUser" asp-action="List" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Plugins.BizApp.SalesPage.Users")
        </h1>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>
                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">

                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchUsername" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchUsername" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-users" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">

                            @{
                                var gridModel = new DataTablesModel
            {
                Name = "users-grid",
                UrlRead = new DataUrl("UserList", "SalesPageUser", null),
                SearchButtonId = "search-users",
                Length = Model.PageSize,
                LengthMenu = Model.AvailablePageSizes,
                Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.SearchUsername)),
                            }
            };

                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(CustomerModel.Username))
                {
                    Title = T("Admin.Customers.Customers.Fields.Username").Text
                });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(CustomerModel.FullName))
            {
                Title = T("Admin.Customers.Customers.Fields.FullName").Text
            });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(CustomerModel.Id))
            {
                Title = T("Plugins.BizApp.SalesPage.SalesPage").Text,
                Width = "100",
                ClassName = NopColumnClassDefaults.Button,
                Render = new RenderButtonCustom(NopColumnClassDefaults.Button, T("Plugins.BizApp.SalesPage.SalesPage").Text)
                {
                    Url = "/Admin/SalesPageAdmin/List?customerId="
                }
            });
                            }
                            @await Html.PartialAsync("Table", gridModel)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
